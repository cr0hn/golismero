#!/usr/bin/python
# -*- coding: utf-8 -*-

__license__ = """
GoLismero 2.0 - The web knife - Copyright (C) 2011-2013

Authors:
  Daniel Garcia Garcia a.k.a cr0hn | cr0hn<@>cr0hn.com
  Mario Vilas | mvilas<@>gmail.com

Golismero project site: http://golismero-project.com
Golismero project mail: golismero.project<@>gmail.com


This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
"""

from golismero.api.config import Config
from golismero.api.text.wordlist import WordListLoader, WordlistNotFound
from golismero.api.data.information.dns import DnsRegister, DnsRegisterCNAME
from golismero.api.net.web_utils import urlparse, split_hostname
from golismero.api.logger import Logger
from golismero.api.plugin import TestingPlugin
from golismero.api.data.vulnerability.information_disclosure.domain_disclosure \
     import DomainDisclosure

#--------------------------------------------------------------------------
class DNSMalware(TestingPlugin):


    #----------------------------------------------------------------------
    def get_accepted_info(self):
        return [DnsRegisterCNAME]


    #----------------------------------------------------------------------
    def recv_info(self, info):

        if info.type != "CNAME":
            Logger.log_error_verbose("Not CNAME found. Skipping.")
            return

        Logger.log_verbose("Looking for poisoned domains")

        root = info.target

        # Load the subdomains wordlist.
        try:
            wordlist = WordListLoader.get_advanced_wordlist_as_list(Config.plugin_args["wordlist"])
        except WordlistNotFound:
            Logger.log_error_verbose("Wordlist '%s' not found.." % Config.plugin_args["wordlist"])
            return
        except TypeError:
            Logger.log_error_verbose("Wordlist '%s' is not a file." % Config.plugin_args["wordlist"])
            return

        results = []
        root_set = set([root])

        for x in root_set.intersection(set(wordlist)):
            v = DomainDisclosure(x,
                                 title       = "Posible DNS poisoning",
                                 description = "The domain could be possible affected for a possible malware that causes DNS poisoning.\n\nDNS spoofing (or DNS cache poisoning) is a computer hacking attack, whereby data is introduced into a Domain Name System (DNS) name server's cache database, causing the name server to return an incorrect IP address, diverting traffic to another computer (often the attacker's). \n\nRef: http://en.wikipedia.org/wiki/DNS_spoofing",
                                 solution    = "You should review your server and your communications with your ISP and ensure that your site was not compromised by a security intrusion.",
                                 severity    = 2,
                                 level       = "middle",
                                 risk        = 2)
            v.add_resource(info)
            results.append(v)

        if results:
            Logger.log_verbose("Discovered %s poinosed domains." % len(results))
        else:
            Logger.log_verbose("No poinosed domains found.")

        # Return the results.
        return results
